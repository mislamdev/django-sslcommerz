name: Release Management

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      prerelease:
        description: 'Is this a pre-release?'
        required: false
        default: false
        type: boolean

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.version.outputs.new_version }}
      release_created: ${{ steps.release.outputs.release_created }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install bump2version
      run: |
        pip install bump2version

    - name: Configure git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: Bump version
      id: version
      run: |
        # Get current version
        CURRENT_VERSION=$(grep "__version__ = " sslcommerz/__init__.py | cut -d'"' -f2)
        echo "Current version: $CURRENT_VERSION"
        
        # Bump version
        bump2version ${{ github.event.inputs.version_type }} --current-version $CURRENT_VERSION
        
        # Get new version
        NEW_VERSION=$(grep "__version__ = " sslcommerz/__init__.py | cut -d'"' -f2)
        echo "New version: $NEW_VERSION"
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

    - name: Generate changelog
      run: |
        # Create changelog entry
        cat > CHANGELOG_ENTRY.md << EOF
        ## [${{ steps.version.outputs.new_version }}] - $(date +%Y-%m-%d)
        
        ### Added
        - New features and enhancements
        
        ### Changed
        - Improvements and updates
        
        ### Fixed
        - Bug fixes and patches
        
        ### Security
        - Security improvements
        EOF

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "chore: bump version to ${{ steps.version.outputs.new_version }}"
        title: "Release v${{ steps.version.outputs.new_version }}"
        body: |
          Automated version bump to ${{ steps.version.outputs.new_version }}
          
          This PR was automatically created by the release workflow.
          
          **Changes:**
          - Version bumped from previous to ${{ steps.version.outputs.new_version }}
          - Updated version in setup.py and __init__.py
          
          **Type:** ${{ github.event.inputs.version_type }} release
          **Pre-release:** ${{ github.event.inputs.prerelease }}
        branch: release/v${{ steps.version.outputs.new_version }}
        delete-branch: true

    - name: Create GitHub Release
      id: release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.new_version }}
        release_name: Release v${{ steps.version.outputs.new_version }}
        body_path: CHANGELOG_ENTRY.md
        draft: false
        prerelease: ${{ github.event.inputs.prerelease }}

  post-release:
    runs-on: ubuntu-latest
    needs: create-release
    if: needs.create-release.outputs.release_created == 'true'
    
    steps:
    - name: Notify Teams/Slack
      run: |
        echo "ðŸ“¦ New release v${{ needs.create-release.outputs.new_version }} has been created!"
        
    - name: Update documentation
      run: |
        echo "ðŸ”„ Triggering documentation update..."
        
    - name: Create GitHub issue for post-release tasks
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'Post-release tasks for v${{ needs.create-release.outputs.new_version }}',
            body: `## Post-release checklist for v${{ needs.create-release.outputs.new_version }}
            
            - [ ] Verify PyPI package deployment
            - [ ] Update documentation if needed
            - [ ] Announce release on social media
            - [ ] Update dependent projects
            - [ ] Monitor for issues
            
            This issue was automatically created after release.`,
            labels: ['release', 'maintenance']
          })
